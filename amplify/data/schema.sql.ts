/* eslint-disable */
/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */
import { a } from "@aws-amplify/data-schema";
import { configure } from "@aws-amplify/data-schema/internals";
import { secret } from "@aws-amplify/backend";

export const schema = configure({
    database: {
        identifier: "IDTzeIWc7JrdR8Wh8z7wrU6w",
        engine: "mysql",
        connectionUri: secret("dbConnectionString"),
        vpcConfig: {
            vpcId: "vpc-0fdfe618d80ebd943",
            securityGroupIds: [
                "sg-0037ec3fb46939516"
            ],
            subnetAvailabilityZones: [
                {
                    subnetId: "subnet-0c01f794c80e7191a",
                    availabilityZone: "us-east-1e"
                },
                {
                    subnetId: "subnet-07a8e004b15cc8235",
                    availabilityZone: "us-east-1d"
                },
                {
                    subnetId: "subnet-09e69fe92f23e24eb",
                    availabilityZone: "us-east-1a"
                },
                {
                    subnetId: "subnet-09ec55cca19e8bd42",
                    availabilityZone: "us-east-1c"
                },
                {
                    subnetId: "subnet-027102ca8e1dbc6db",
                    availabilityZone: "us-east-1f"
                },
                {
                    subnetId: "subnet-0854bb7ac650b611d",
                    availabilityZone: "us-east-1b"
                }
            ]
        }
    }
}).schema({
    "Item": a.model({
        id: a.integer().required(),
        name: a.string().required(),
        description: a.string(),
        image: a.string().required(),
        initialPrice: a.float().required(),
        published: a.integer().required(),
        archived: a.integer().required(),
        frozen: a.integer().required(),
        fulfilled: a.integer().required(),
        startDate: a.date(),
        length: a.integer()
    }).identifier([
        "id"
    ]),
    "Bid": a.model({
        id: a.integer().required(),
        buyerUsername: a.string(),
        amount: a.float().required(),
        dateMade: a.date().required(),
        itemName: a.string()
    }).identifier([
        "id"
    ]),
    "Seller": a.model({
        username: a.string().required(),
        password: a.string().required(),
        active: a.integer().required(),
        funds: a.float().required()
    }).identifier([
        "username"
    ]),
    "Buyer": a.model({
        username: a.string().required(),
        password: a.string().required(),
        active: a.integer().required(),
        funds: a.float().required()
    }).identifier([
        "username"
    ])
});
